add2 <- function(x, y){
x + y
}
add2(3,5)
above10 <- function(x){
use <- x > 10
x[use]
}
above <- function(x,n){
use <- x > n
x[use]
}
x <- 1:20
above10(x)
above(x,12)
above <- function(x,n = 10){
use <- x > n
x[use]
}
View(above10)
View(above)
View(above10)
View(above)
above(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1-.nc){
means[i] <- mean(y[,i])
}
means
}
y <- (1:20,4,5)
y <- matrix(1:20,4,5)
columnmean(y)
y
ncol(y)
columnmean(y)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean(y)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
y[1,1]<- NA
y
columnmean(y)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], no.re = removeNA)
}
means
}
columnmean(y)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(y)
columnmean(y, FALSE)
?formals
formals(add2)
formals(above)
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
y<-10
f(3)
f(2)
g(2)
!isTRUE(TRUE)
6 > -1
xor(!isTRUE(TRUE),6>-1)
1
my_vector<-c(1,2,3,4)
sum("my_vector")/length("my_vector")
sum(my_vector)/length(my_vector)
7 %% 3
7 %% 1
"start"
c(FALSE, FALSE)
X <- C(FALSE, FALSE)
x <- c(FALSE, FALSE)
p <- x
p
p[!x]
p[!x] <- l
?set.seed
set.seed(1)
set.seed(1)
x <- set.seed(1)
x
x <- set.seed(10)
x
?NegLogLike
?make.NegLogLike
?make.NegLogLik
?optim
ls()
x
p
p*1
xian <- "xazz"
x
xi
c(xi)
xian <- c(1,2)
mean(xi)
ls()
rm(list = ls())
x <- as.Date("01-01-1970")
x
x <- as.Date("1970-01-01")
x
unclass(x)
x <- as.Date("1970-01-02")
unclass(x)
x <- Sys.time()
x
p <- as.POSIXlt(x)
p
d <- as.POSIXct(x)
d
names(unclass(p))
p$mon
p$year
p$sec
unclass(d)
datestring <- c("January 10, 2012 10:40", "December 9, 2011 9:10")
x <- strptime(datestring, "%B %d %H: %M")
x
datestring
class(x)
x
x <- strptime(datestring, "%B %d %H:%M")
x
x <- strptime(datestring, "%B %d, %Y %H:%M")
x
x[1]
datestring
x <- strptime(datestring, "%B %d, %Y %H:%M")
x
datestring <- c("January 10, 2012 10:40")
x <- strptime(datestring, "%B %d, %Y %H:%M")
x
cube <- function(x, n){
x^3
}
cube(3)
x <- 1:10
if(x > 5){
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
getwd()
dir()
setwd(paste(getwd(), "/GitHub", sep = ""))
getwd()
setwd(paste(getwd(), "/COURSERA/Cleaning_And_Gettng_Data/WEEK_01/EX", sep = ""))
setwd(paste(getwd(), "/COURSERA/Cleaning_And_Getting_Data/WEEK_01/EX", sep = ""))
getwd()
file.exists(data)
file.exists("data"")
file.exists("data")
dir.create("data")
dir()
fileURL <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileURL, destfile = "./data/cameras.csv", method = "curl")
download.file(fileURL, destfile = "./data/cameras.csv")
dir()
list.files("./data")
date()
?read.table
?read.csv
?read.csv
if(!file.exist("data")){dir.create("data")}
if(!file.exists("data")){dir.create("data")}
dir()
fileUrl
fileURL
fileURL <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
fileURL
download.file(fileURL, destfile = "./data/cameras.xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
read.xlsx("./data/cameras.xlsx", sheetIndex = 1, header = TRUE)
data.cameras <- read.xlsx("./data/cameras.xlsx", sheetIndex = 1, header = TRUE)
install.packages("XLConnect")
vignette("XLconnect")
vignette("XLConnect")
setwd("./DATA")
setwd("./data")
getwd()
dir()
loadWorkbook("cameras.xlsx")
loadWorkbook("cameras.xlsx", create = TRUE)
library(XLConnect)
loadWorkbook("cameras.xlsx")
?loadWorkbook
FileEx <- loadWorkbook("cameras.xlsx")
createSheet(FileEx, "prova")
writeWorksheet(FileEx, numeri = 1:10, "prova")
writeWorksheet(FileEx, 1:10, "prova")
data.prova <- data.frame(numeri = 1:10, lettere = LETTERS[1:10])
data.prova
writeWorksheet(FileEx, data.prova, sheet = "prova")
FileEx <- loadWorkbook("prova.xlsx")
FileEx <- loadWorkbook("prova.xlsx", create = TRUE)
createSheet(FileEx, "prova")
writeWorksheet(FileEx, data.prova, sheet = "prova", startRow = 2, startCol = 1)
saveWorkbook(FileEx)
class(data.prova[,2])
class(data.prova[,1])
data.prova[,2] <- as.numeric(data.prova[, 2])
class(data.prova[,1])
class(data.prova[,2])
data.prova[,2] <- as.character(data.prova[, 2])
class(data.prova[,2])
data.prova
data.prova[,2] <- as.character(LETTERS[1:10])
data.prova
FileEx
FileEx <- loadWorkbook("prova.xlsx", create = TRUE)
require(XLConnect)
writeWorksheet(FileEx, data.prova, sheet = "prova", startRow = 2, startCol = 1)
?library
detach(xlsx)
detach("xlsx"")
detach("xlsx")
detach(package = "xlsx", unload = TRUE)
detach("package:xlsx", unload = TRUE)
require(XLConnect)
writeWorksheet(FileEx, data.prova, sheet = "prova", startRow = 2, startCol = 1)
