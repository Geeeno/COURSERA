add2 <- function(x, y){
x + y
}
add2(3,5)
above10 <- function(x){
use <- x > 10
x[use]
}
above <- function(x,n){
use <- x > n
x[use]
}
x <- 1:20
above10(x)
above(x,12)
above <- function(x,n = 10){
use <- x > n
x[use]
}
View(above10)
View(above)
View(above10)
View(above)
above(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1-.nc){
means[i] <- mean(y[,i])
}
means
}
y <- (1:20,4,5)
y <- matrix(1:20,4,5)
columnmean(y)
y
ncol(y)
columnmean(y)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean(y)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
y[1,1]<- NA
y
columnmean(y)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], no.re = removeNA)
}
means
}
columnmean(y)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(y)
columnmean(y, FALSE)
?formals
formals(add2)
formals(above)
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
y<-10
f(3)
f(2)
g(2)
!isTRUE(TRUE)
6 > -1
xor(!isTRUE(TRUE),6>-1)
1
my_vector<-c(1,2,3,4)
sum("my_vector")/length("my_vector")
sum(my_vector)/length(my_vector)
7 %% 3
7 %% 1
"start"
c(FALSE, FALSE)
X <- C(FALSE, FALSE)
x <- c(FALSE, FALSE)
p <- x
p
p[!x]
p[!x] <- l
?set.seed
set.seed(1)
set.seed(1)
x <- set.seed(1)
x
x <- set.seed(10)
x
?NegLogLike
?make.NegLogLike
?make.NegLogLik
?optim
ls()
x
p
p*1
xian <- "xazz"
x
xi
c(xi)
xian <- c(1,2)
mean(xi)
ls()
rm(list = ls())
x <- as.Date("01-01-1970")
x
x <- as.Date("1970-01-01")
x
unclass(x)
x <- as.Date("1970-01-02")
unclass(x)
x <- Sys.time()
x
p <- as.POSIXlt(x)
p
d <- as.POSIXct(x)
d
names(unclass(p))
p$mon
p$year
p$sec
unclass(d)
datestring <- c("January 10, 2012 10:40", "December 9, 2011 9:10")
x <- strptime(datestring, "%B %d %H: %M")
x
datestring
class(x)
x
x <- strptime(datestring, "%B %d %H:%M")
x
x <- strptime(datestring, "%B %d, %Y %H:%M")
x
x[1]
datestring
x <- strptime(datestring, "%B %d, %Y %H:%M")
x
datestring <- c("January 10, 2012 10:40")
x <- strptime(datestring, "%B %d, %Y %H:%M")
x
cube <- function(x, n){
x^3
}
cube(3)
x <- 1:10
if(x > 5){
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
install.packages("RMySQL")
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.soe.ucsc.edu")
?dbGetQuery
result <- dbGetQuery(ucscDb, "show database;", dbDisconnect(ucscDb))
result <- dbGetQuery(ucscDb, "show database;"); dbDisconnect(ucscDb));
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.soe.ucsc.edu")
result <- dbGetQuery(ucscDb, "show database;"); dbDisconnect(ucscDb);
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.soe.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb);
class(result)
head(result)
hg19 <- dbConnect(MySQL(), user = "genome", db = "hg19", host = "genome-mysql.soe.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
allTables[100:105]
allTables[1, 1]
allTables[, 1]
allTables$HInv
class(allTbles)
class(allTables)
nrow(allTables)
dbListFields(hg19, "chainBosTau7Link")
dbGetQuery(hg19, "select count(*) from chainBosTau7Link"); dbDisconnect(ucscDb);
dbGetQuery(hg19, "select count(*) from chainBosTau7Link"); dbDisconnect(hg19);
hg19 <- dbConnect(MySQL(), user = "genome", db = "hg19", host = "genome-mysql.soe.ucsc.edu")
affyData <- dbReadTable(hg19, "chainBosTau7Link")
head(affyData)
rm("affyData")
?fetch
?quantile
affyData <- dbReadTable(hg19, "affyU133Plus2")
hg19 <- dbConnect(MySQL(), user = "genome", db = "hg19", host = "genome-mysql.soe.ucsc.edu")
affyData <- dbReadTable(hg19, "affyU133Plus2")
warnings()
head(affyData)
quesry <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
quesry
affyMis <- fetch(quesry)
head(affyMis)
table(affyMis$misMatches)
quantile(affyMis$misMatches)
quantile(x <- rnorm(1001))
rnorm(1001)
set.seed(10)
rnorm(1001)
a <- rmin(1001)
a <- rnorm(1001)
min(a)
quantile(a)
max(a)
table(a)
tables(a)
summary(a)
dnorm(affyMis$misMatches)
(affyMis$misMatches)
table(affyMis$misMatches)
plot(affyMis$misMatches, dnorm(affyMis$misMatches))
pnorm(affyMis$misMatches)
table(pnorm(affyMis$misMatches))
quantile(affyMis$misMatches)
dbClearResult(quesry)
dbDisconnect(hg19)
source("http://bioconductor.org/biocLite.R")
library(rhdf5)
biocLite("rhdf5")
library(rhdf5)
getwd()
setwd(paste(getwd(), "/GitHub/COURSERA/Cleaning_And_Getting_Data/WEEK_02/EX"))
setwd(paste(getwd(), "/GitHub/COURSERA/Cleaning_And_Getting_Data/WEEK_02/EX", sep=""))
created <- h5createFile("example.h5")
created
created = h5createGroup("example.h5", "foo")
created = h5createGroup("example.h5", "baa")
created = h5createGroup("example.h5", "foo/gaa")
h5ls("example.h5")
install.packages("Rfacebook")
install.packages("RCurl")
library(Rfacebook)
library(RCurl)
fb_oauth <- fbOAuth(app_id="310124639506018", app_secret="c448a7c63dbb35009aeb625646bbf75b",extended_permissions = TRUE)
me <- getUsers("me",token=fb_oauth, private_info=TRUE)
me
me$name
?getUsers
likes = getLikes(user="me", token = fb_oauth)
sample(likes$names, 10)
sample(likes$names, 10)
pages <- searchPages( string="trump", token=fb_oauth, n=200)
head(pages)
names(pages)
head(pages$name)
page <- getPage(page="bbcnews", token=fb_oauth, n=200)
View(page)
summary = page[which.max(page$likes_count),]
View(summary)
summary$message
summary2 = page[which.max(page$shares_count),]
summary2$message
View(page)
?getPost
View(fb_oauth)
post <- getPost(summary$id[1], token=fb_oauth, comments = FALSE, n.likes=2000)
post <- getPost(summary$id[1], token=fb_oauth, comments = FALSE, n.like=2000)
post <- getPost(summary$id[1], token=fb_oauth, comments = FALSE, n.like=200)
post <- getPost(summary$id[1], token=fb_oauth, comments = FALSE, n.likes = 2000)
View(summary)
post <- getPost(228735667216_10155368872507217, token=fb_oauth, comments = FALSE, n.likes = 2000)
post <- getPost("228735667216_10155368872507217", token=fb_oauth, comments = FALSE, n.likes = 2000)
post <- getPost("228735667216_10155368872507217", token=fb_oauth, comments = FALSE, n.likes = 20)
post <- getPost("228735667216_10155368872507217", token=fb_oauth, comments = FALSE, n = 200, n.likes = 20)
post <- getPost(post=summary$id[1], token=fb_oauth, comments = FALSE, n.likes = 2000)
post <- getPost(post=summary$id[1], token=fb_oauth, n = 2000)
debug(getPost)
post <- getPost(post=summary$id[1], token=fb_oauth, n = 2000)
post <- getPost(post=summary$id[1], token=fb_oauth, n = 2000)
View(out)
dim(out$likes)
dim(out$likes)[1]
dim(out$likes_count)[1]
dim(out$likes_count)
dim(out$post)
dim(out$post[[likes]])
dim(out$post[[likeses]])
dim(out$post[[likes_count]])
dim(out$post$likes_count)
out[["likes"]]
head(out)
dim(out[["post"]][["likes_count"]])
length(out[["post"]][["likes_count"]])
n.l <- 0
View(post)
head(post)
comments <- post$comments
post <- getPost(post=summary$id[1], token=fb_oauth, n = 2000)
rm(post)
rm(comment)
rm(comments)
post <- getPost(post=summary$id[1], token=fb_oauth, n = 2000)
post <- getPost(post=summary$id[1], token=fb_oauth, n = 2000)
Q
rm(list = ls())
fb_oauth <- fbOAuth(app_id="310124639506018", app_secret="c448a7c63dbb35009aeb625646bbf75b",extended_permissions = TRUE)
page <- getPage(page="bbcnews", token=fb_oauth, n=200)
summary = page[which.max(page$likes_count),]
debug(getPost)
post <- getPost(post=summary$id[1], token=fb_oauth, comments = FALSE, n.likes = 2000)
View(out)
View(content)
content$likes$data
?callAPI
url
?likesDataToDF
View(content)
View(token)
